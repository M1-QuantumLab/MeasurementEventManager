#! python
'''
Start up a MeasurementEventManager instance with the specified sockets.
'''

from __future__ import print_function
import itertools

import zmq

import measurement_event_manager as mem


###############################################################################
## Initialize ZMQ messaging
###############################################################################

GUIDE_PROTOCOL = "MEM-GR/0.1"
GUIDE_TIMEOUT = 2500
GUIDE_ENDPOINT = 'tcp://*:5555'

context = zmq.Context()

## Set up guide response socket
guide = context.socket(zmq.REP)
guide.bind(GUIDE_ENDPOINT)


###############################################################################
## Listen for requests
###############################################################################

print('Listening on endpoint', GUIDE_ENDPOINT)

for server_tick in itertools.count():
    
    ## Receive request
    ##################

    request = guide.recv_multipart()
    print('Request received.')


    ## Parse request
    ################

    print('Request content is:')
    print(request)
    
    ## Identify request protocol
    req_protocol = request[0]
    ## Make sure we have the correct protocol
    if not (req_protocol == GUIDE_PROTOCOL):
        print('Unrecognized protocol {}'.format(req_protocol))
        guide.send_multipart([GUIDE_PROTOCOL.encode(), b'ERR',])
    
    ## Unpack remaining content
    req_type = request[1]
    req_content = request[2:]


    ## Check request type and parse content accordingly
    if req_type == 'IDN':
        print('Identifying to client')
        guide.send_multipart([GUIDE_PROTOCOL.encode(),
                               b'IDN',
                               'MeasurementEventManager at {}'.format(
                                                GUIDE_ENDPOINT).encode()])
        print('Response sent.')
    elif req_type == 'ADD':
        print('ADD requested; currently not implemented.')
        guide.send_multipart([GUIDE_PROTOCOL.encode(),
                              b'ADD',
                              'foo'])
        print('Response sent')
    else:
        print('Unknown request type: {}'.format(req_type))
        guide.send_multipart([GUIDE_PROTOCOL.encode(),
                              b'ERR',])
        print('Response sent.')

